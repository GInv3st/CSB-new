name: Bot Health Check & Recovery

on:
  schedule:
    # Check every 10 minutes
    - cron: '*/10 * * * *'
  workflow_dispatch:

jobs:
  health-check:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check recent workflow runs
        uses: actions/github-script@v7
        with:
          script: |
            const { data: workflows } = await github.rest.actions.listRepoWorkflows({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            const botWorkflows = workflows.workflows.filter(w => 
              w.name.includes('Crypto') && w.name.includes('Bot')
            );
            
            let healthyCount = 0;
            let totalChecked = 0;
            
            for (const workflow of botWorkflows) {
              const { data: runs } = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: workflow.id,
                per_page: 3
              });
              
              totalChecked++;
              const recentRun = runs.workflow_runs[0];
              
              if (recentRun) {
                const runAge = Date.now() - new Date(recentRun.created_at).getTime();
                const isRecent = runAge < 20 * 60 * 1000; // 20 minutes
                const isSuccessful = recentRun.conclusion === 'success';
                
                console.log(`📊 ${workflow.name}: ${recentRun.conclusion} (${Math.round(runAge/60000)}m ago)`);
                
                if (isRecent && isSuccessful) {
                  healthyCount++;
                }
              }
            }
            
            console.log(`🏥 Health Status: ${healthyCount}/${totalChecked} workflows healthy`);
            
            // If less than 50% are healthy, trigger recovery
            if (healthyCount < totalChecked * 0.5) {
              console.log('🚨 UNHEALTHY STATE DETECTED - Need manual intervention');
              core.setFailed('Bot workflows are unhealthy');
            } else {
              console.log('✅ All systems operational');
            }

      - name: Send health alert
        if: failure()
        uses: actions/github-script@v7
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        with:
          script: |
            const https = require('https');
            
            const message = `🚨 BOT HEALTH ALERT 🚨
            
            One or more trading bot workflows are failing.
            Please check GitHub Actions dashboard.
            
            Time: ${new Date().toISOString()}
            Repository: ${context.repo.owner}/${context.repo.repo}`;
            
            const data = JSON.stringify({
              chat_id: process.env.TELEGRAM_CHAT_ID,
              text: message
            });
            
            const options = {
              hostname: 'api.telegram.org',
              path: `/bot${process.env.TELEGRAM_BOT_TOKEN}/sendMessage`,
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'Content-Length': data.length
              }
            };
            
            const req = https.request(options, (res) => {
              console.log(`Health alert sent: ${res.statusCode}`);
            });
            
            req.write(data);
            req.end();