name: Bot Health Check & Monitoring

on:
  schedule:
    # Check every 10 minutes
    - cron: '*/10 * * * *'
  workflow_dispatch:

jobs:
  health-check:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check bot workflows status
        uses: actions/github-script@v7
        with:
          script: |
            console.log('üîç Checking bot health status...');
            
            const workflows = ['crypto-3m.yml', 'crypto-5m.yml', 'crypto-15m.yml'];
            let healthReport = 'üìä **Bot Health Report**\n\n';
            
            for (const workflow of workflows) {
              try {
                const { data: runs } = await github.rest.actions.listWorkflowRuns({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  workflow_id: workflow,
                  per_page: 5
                });
                
                const recent = runs.workflow_runs[0];
                if (recent) {
                  const status = recent.status === 'completed' && recent.conclusion === 'success' ? '‚úÖ' : '‚ùå';
                  const timeDiff = Math.round((Date.now() - new Date(recent.created_at)) / (1000 * 60));
                  healthReport += `${status} **${workflow.replace('.yml', '')}**: ${recent.conclusion} (${timeDiff}m ago)\n`;
                } else {
                  healthReport += `‚ùì **${workflow.replace('.yml', '')}**: No recent runs\n`;
                }
              } catch (error) {
                healthReport += `üö´ **${workflow.replace('.yml', '')}**: Error checking status\n`;
              }
            }
            
            console.log(healthReport);

      - name: Send health report to Telegram
        if: always()
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="üè• Health Check: All 3 bot workflows monitored at $(date -u)" \
            -d parse_mode="Markdown" || echo "Telegram notification failed"