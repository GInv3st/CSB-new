name: Crypto Scalping Bot - 5m Timeframe

on:
  schedule:
    # Every 5 minutes, offset to avoid conflicts (2,7,12... pattern)
    - cron: '2,7,12,17,22,27,32,37,42,47,52,57 * * * *'
  workflow_dispatch:

concurrency:
  group: crypto-bot-5m
  cancel-in-progress: false

permissions:
  actions: write
  contents: read

concurrency:
  group: crypto-bot-5m
  cancel-in-progress: false

permissions:
  actions: write
  contents: read

concurrency:
  group: crypto-bot-5m
  cancel-in-progress: false

permissions:
  actions: write
  contents: read

jobs:
  scalp-5m:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Download cache
        uses: actions/download-artifact@v4
        with:
          name: bot-cache-5m
          path: .cache/
        continue-on-error: true

      - name: Install system dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y build-essential

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install -r requirements-fast.txt --no-cache-dir

      - name: Run 5m scalping bot
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TIMEFRAME: "5m"
          MAX_SIGNALS: "4"
        run: |
          timeout 540s python runner.py || echo "Timeout reached - normal for 5m scalping"

      - name: Cleanup old cache
        run: |
          find .cache -name "*.json" -mtime +1 -delete 2>/dev/null || true

      - name: Upload updated cache
        uses: actions/upload-artifact@v4
        with:
          name: bot-cache-5m
          path: .cache/
          retention-days: 2
        if: always()
